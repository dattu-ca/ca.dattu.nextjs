// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface IArticleFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title?: string | undefined;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;
}

/** Content.  It can be queried directly or be embedded in Page or Post. */

export interface IArticle extends Entry<IArticleFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "article";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IAssetsCollectionFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;

  /** Layout */
  layout?: "Grid" | "Slider" | "Stack" | undefined;
}

/** A collection of asset widgets, youtube widgets, etc. */

export interface IAssetsCollection extends Entry<IAssetsCollectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "assetsCollection";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IAssetWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;

  /** Asset */
  asset?: Asset | undefined;

  /** Width */
  width?: number | undefined;
}

/** Any asset that is referenced, is referenced via this widget. */

export interface IAssetWidget extends Entry<IAssetWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "assetWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ICategoryMetaFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;
}

/** Post Categories */

export interface ICategoryMeta extends Entry<ICategoryMetaFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "categoryMeta";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IEmailWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Email */
  email?: string | undefined;

  /** Type */
  type?: "Personal" | undefined;
}

export interface IEmailWidget extends Entry<IEmailWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "emailWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IExperiencesCollectionFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;
}

/** A collection of Experience Widgets */

export interface IExperiencesCollection
  extends Entry<IExperiencesCollectionFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "experiencesCollection";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IExperienceWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title?: string | undefined;

  /** Slug */
  slug: string;

  /** Body */
  body: string[];

  /** Categories */
  categories?: ICategoryMeta[] | undefined;

  /** Start Date */
  startDate?: string | undefined;

  /** End Date */
  endDate?: string | undefined;
}

/** Individual experiences */

export interface IExperienceWidget extends Entry<IExperienceWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "experienceWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IJsonDataWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: string | undefined;
}

/** JSON Object */

export interface IJsonDataWidget extends Entry<IJsonDataWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "jsonDataWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface ILinksWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: string | undefined;
}

/** The list of links. */

export interface ILinksWidget extends Entry<ILinksWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "linksWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPageFields {
  /** Internal Name */
  internalName: string;

  /** Pre-title */
  pretitle?: string | undefined;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Subtitle */
  subtitle?: string | undefined;

  /** Body */
  body?: Document | undefined;

  /** Categories */
  categories?: ICategoryMeta[] | undefined;
}

/** Static Pages */

export interface IPage extends Entry<IPageFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "page";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IPersonWidgetFields {
  /** Internal Name */
  internalName: string;

  /** First Name */
  firstName?: string | undefined;

  /** Last Name */
  lastName?: string | undefined;

  /** Preferred Name */
  preferredName?: string | undefined;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;
}

export interface IPersonWidget extends Entry<IPersonWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "personWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export interface IYouTubeWidgetFields {
  /** Internal Name */
  internalName: string;

  /** Youtube Link */
  link?: string | undefined;

  /** Title */
  title: string;

  /** Slug */
  slug: string;

  /** Body */
  body?: Document | undefined;
}

/** Contains a YouTube video */

export interface IYouTubeWidget extends Entry<IYouTubeWidgetFields> {
  sys: {
    id: string;
    type: string;
    createdAt: string;
    updatedAt: string;
    locale: string;
    contentType: {
      sys: {
        id: "youTubeWidget";
        linkType: "ContentType";
        type: "Link";
      };
    };
  };
}

export type CONTENT_TYPE =
  | "article"
  | "assetsCollection"
  | "assetWidget"
  | "categoryMeta"
  | "emailWidget"
  | "experiencesCollection"
  | "experienceWidget"
  | "jsonDataWidget"
  | "linksWidget"
  | "page"
  | "personWidget"
  | "youTubeWidget";

export type IEntry =
  | IArticle
  | IAssetsCollection
  | IAssetWidget
  | ICategoryMeta
  | IEmailWidget
  | IExperiencesCollection
  | IExperienceWidget
  | IJsonDataWidget
  | ILinksWidget
  | IPage
  | IPersonWidget
  | IYouTubeWidget;

export type LOCALE_CODE = "en-CA";

export type CONTENTFUL_DEFAULT_LOCALE_CODE = "en-CA";
